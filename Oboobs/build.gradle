buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.8.+'
    }
}
apply plugin: 'android'
apply plugin: 'retrolambda'

repositories {
    mavenCentral()
}

retrolambda{
    jdk System.getenv("JAVA8_HOME")
    oldJdk System.getenv("JAVA_HOME")
    javaVersion JavaVersion.VERSION_1_6
}

dependencies {
    compile 'com.android.support:appcompat-v7:19.0.+'
    compile 'com.squareup.okhttp:okhttp:1.3.+'
    compile 'com.squareup.retrofit:retrofit:1.4.+'
    compile 'com.squareup.picasso:picasso:2.2.+'
    compile 'com.netflix.rxjava:rxjava-android:0.17.+'
    compile 'com.netflix.rxjava:rxjava-async-util:0.17.+'

    compile 'com.jakewharton:butterknife:4.0.1'

    compile 'com.squareup.dagger:dagger:1.2.0'
    provided 'com.squareup.dagger:dagger-compiler:1.2.0'

    compile fileTree(dir: 'libs', include: '*.jar')
}
android {
    compileSdkVersion 19
    buildToolsVersion "19.0.1"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 8
        versionName "0.9.9"
    }

    signingConfigs {
        myConfig
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            packageNameSuffix ".debug"
        }
        release {
            runProguard true
            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile file('proguard-project.txt')
            signingConfig signingConfigs.myConfig
        }
    }
        sourceSets {
            main.res.srcDirs = ['src/main/res']
            debug.res.srcDirs = ['src/debug/res']
        }

    if (project.hasProperty('storeFile')) {
        android.signingConfigs. myConfig.storeFile = file(storeFile)
    }
    if (project.hasProperty('storePassword')) {
        android.signingConfigs. myConfig.storePassword = storePassword
    }
    if (project.hasProperty('keyAlias')) {
        android.signingConfigs. myConfig.keyAlias = keyAlias
    }
    if (project.hasProperty('keyPassword')) {
        android.signingConfigs. myConfig. keyPassword = keyPassword
    }
}
